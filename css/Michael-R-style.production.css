body{
  font-family: 'Roboto', sans-serif;
  font-weight: 300;
  line-height: 2;
  margin:0px;
  padding: 1px;
}

div{
  margin:0px;
  padding: 1px;
  font-family: cursive;
  font-style: oblique;
  text-align: center
}

section{
  margin:0px;
  padding: 1px;
}

h1{
  font-size: 20px;
  float: left;
  padding-right: 500px;
  padding-bottom: 150px;
}



li{
  text-align: left;
}

#welcome{
background-size: cover;
background-repeat: no-repeat;
margin:0px;
padding: 1px;
font-family: monospace;
}

#resume{
  background-size: cover;
  margin:0px;
  padding: 1px;
  font-family: monospace;
}

#project{
  background-size: cover;
  margin:0px;
  padding: 1px;
  font-family: monospace;
}

#contact
{
  background-size: cover;
  margin:0px;
  padding: 1px;
  font-family: monospace;
}


#SVG_image{
  text-align: center;
}

p{
  font-family: cursive;
  font-style: oblique;
}


a {
  background-color: inherit;
  color: #357b70;
}

a:hover {
  text-decoration: none;
}

a:visited {
  background-color:#ffffff;
  color: #2b2b2b;
}

a:active {
  background-color: #ffffff;
  color: #F0F8FF;
}


.page-footer {
  clear: both;
  display: flex;
          flex-direction: column;
  text-align: center;

}

.profile {
  max-width: 700px;
  margin: 150px;
  background-size: cover;
  display: flex;
}

* {
    box-sizing: border-box;
}

.profile__text {
            flex: 1 1 100px;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;

}

.page-header__item {
          flex: 0 1 200px;
}

.page-header__item:last-child {
          flex-grow: 1;
  text-align: right;
}

.navigation-list {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  grid-gap: 20px;
}

.grid__item {
  background-color: lightgray;
  color: inherit;
  padding-top: 20px;
}


@keyframes cloud-move-reverse {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
